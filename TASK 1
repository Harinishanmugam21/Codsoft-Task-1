{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOhzolqhdX0pBzia7Ud1NJ9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":[],"metadata":{"id":"GBbJu3PF5kYB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["TITANIC SURVIVAL PREDICTION"],"metadata":{"id":"hsADLB3EiL3R"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import SVC, LinearSVC\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.linear_model import SGDClassifier\n"],"metadata":{"id":"yr6w4InNmrkn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=pd.read_csv('/content/tested.csv')\n","df.head(11)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":533},"id":"aZspn7r7o1jA","executionInfo":{"status":"ok","timestamp":1703308367255,"user_tz":-330,"elapsed":588,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"a2751d69-a0d7-4ac4-f1e2-118b27c9bf7e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    PassengerId  Survived  Pclass  \\\n","0           892         0       3   \n","1           893         1       3   \n","2           894         0       2   \n","3           895         0       3   \n","4           896         1       3   \n","5           897         0       3   \n","6           898         1       3   \n","7           899         0       2   \n","8           900         1       3   \n","9           901         0       3   \n","10          902         0       3   \n","\n","                                            Name     Sex   Age  SibSp  Parch  \\\n","0                               Kelly, Mr. James    male  34.5      0      0   \n","1               Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n","2                      Myles, Mr. Thomas Francis    male  62.0      0      0   \n","3                               Wirz, Mr. Albert    male  27.0      0      0   \n","4   Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n","5                     Svensson, Mr. Johan Cervin    male  14.0      0      0   \n","6                           Connolly, Miss. Kate  female  30.0      0      0   \n","7                   Caldwell, Mr. Albert Francis    male  26.0      1      1   \n","8      Abrahim, Mrs. Joseph (Sophie Halaut Easu)  female  18.0      0      0   \n","9                        Davies, Mr. John Samuel    male  21.0      2      0   \n","10                              Ilieff, Mr. Ylio    male   NaN      0      0   \n","\n","       Ticket     Fare Cabin Embarked  \n","0      330911   7.8292   NaN        Q  \n","1      363272   7.0000   NaN        S  \n","2      240276   9.6875   NaN        Q  \n","3      315154   8.6625   NaN        S  \n","4     3101298  12.2875   NaN        S  \n","5        7538   9.2250   NaN        S  \n","6      330972   7.6292   NaN        Q  \n","7      248738  29.0000   NaN        S  \n","8        2657   7.2292   NaN        C  \n","9   A/4 48871  24.1500   NaN        S  \n","10     349220   7.8958   NaN        S  "],"text/html":["\n","  <div id=\"df-80f8332e-ad01-4042-8a02-4161e447d66c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>897</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Svensson, Mr. Johan Cervin</td>\n","      <td>male</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7538</td>\n","      <td>9.2250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>898</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Connolly, Miss. Kate</td>\n","      <td>female</td>\n","      <td>30.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330972</td>\n","      <td>7.6292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>899</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Caldwell, Mr. Albert Francis</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>248738</td>\n","      <td>29.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>900</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Abrahim, Mrs. Joseph (Sophie Halaut Easu)</td>\n","      <td>female</td>\n","      <td>18.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2657</td>\n","      <td>7.2292</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>901</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Davies, Mr. John Samuel</td>\n","      <td>male</td>\n","      <td>21.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>A/4 48871</td>\n","      <td>24.1500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>902</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Ilieff, Mr. Ylio</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>349220</td>\n","      <td>7.8958</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80f8332e-ad01-4042-8a02-4161e447d66c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-80f8332e-ad01-4042-8a02-4161e447d66c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-80f8332e-ad01-4042-8a02-4161e447d66c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd88af48-d0a9-42bd-a634-996bb744ca82\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd88af48-d0a9-42bd-a634-996bb744ca82')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd88af48-d0a9-42bd-a634-996bb744ca82 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"-45bcq8yq6qL","executionInfo":{"status":"ok","timestamp":1703308375853,"user_tz":-330,"elapsed":807,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"c6276b14-c6cc-41dc-a861-52a38253b923"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   418.000000  418.000000  418.000000  332.000000  418.000000   \n","mean   1100.500000    0.363636    2.265550   30.272590    0.447368   \n","std     120.810458    0.481622    0.841838   14.181209    0.896760   \n","min     892.000000    0.000000    1.000000    0.170000    0.000000   \n","25%     996.250000    0.000000    1.000000   21.000000    0.000000   \n","50%    1100.500000    0.000000    3.000000   27.000000    0.000000   \n","75%    1204.750000    1.000000    3.000000   39.000000    1.000000   \n","max    1309.000000    1.000000    3.000000   76.000000    8.000000   \n","\n","            Parch        Fare  \n","count  418.000000  417.000000  \n","mean     0.392344   35.627188  \n","std      0.981429   55.907576  \n","min      0.000000    0.000000  \n","25%      0.000000    7.895800  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.500000  \n","max      9.000000  512.329200  "],"text/html":["\n","  <div id=\"df-89b568da-a676-45da-a169-63bdfbb9dbfd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>418.000000</td>\n","      <td>418.000000</td>\n","      <td>418.000000</td>\n","      <td>332.000000</td>\n","      <td>418.000000</td>\n","      <td>418.000000</td>\n","      <td>417.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1100.500000</td>\n","      <td>0.363636</td>\n","      <td>2.265550</td>\n","      <td>30.272590</td>\n","      <td>0.447368</td>\n","      <td>0.392344</td>\n","      <td>35.627188</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>120.810458</td>\n","      <td>0.481622</td>\n","      <td>0.841838</td>\n","      <td>14.181209</td>\n","      <td>0.896760</td>\n","      <td>0.981429</td>\n","      <td>55.907576</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>892.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.170000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>996.250000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1100.500000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>27.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1204.750000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>39.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1309.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>76.000000</td>\n","      <td>8.000000</td>\n","      <td>9.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89b568da-a676-45da-a169-63bdfbb9dbfd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-89b568da-a676-45da-a169-63bdfbb9dbfd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-89b568da-a676-45da-a169-63bdfbb9dbfd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dac1cd59-d1fc-4aa0-b894-5b9a036b61cb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dac1cd59-d1fc-4aa0-b894-5b9a036b61cb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dac1cd59-d1fc-4aa0-b894-5b9a036b61cb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df['Survived'].value_counts().plot(kind='bar', title='Death and Survival Counts',grid=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"3dxJ5SeE5oYI","executionInfo":{"status":"ok","timestamp":1703308383907,"user_tz":-330,"elapsed":621,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"f3a307f9-2b9c-4cc4-a400-a642be110898"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAigAAAGuCAYAAAC6DP3dAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAs1ElEQVR4nO3de3hNd77H8U+uOxcigiTiEpdqI6UY15S6JRLXVqUtrbaYHlon5oymeklLJejoeEpvqI5HmV4y1XZOW1QRFGMa144qWi01WtVEUYlQ2ybr/DFP9rHtIIkk+8d+v54nD+u3fmut72/vtfhkXfb2sSzLEgAAgEF8PV0AAADAxQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCiAB/Xs2VOtWrXydBlXtGjRIvn4+Ojf//63p0upkJ49e6pnz55Vtv5///vf8vHx0aJFi6psG4C3IaDgulbyH2vJT1BQkGJiYpSSkqJXXnlFJ0+erPIaDh8+rMzMTO3YsaPKt2WCjRs3ql+/fmrQoIGCgoLUuHFjDRo0SNnZ2Z4uzRj5+fmaMGGC4uLiFBISotDQULVv317Tpk3TiRMnPF2eJCk7O1svvfSSp8uAF/P3dAFAdZgyZYqaNm0qh8OhvLw8rVu3TuPHj9esWbO0ZMkS3XLLLVW27cOHDysrK0tNmjRR27Ztq2w7Jnj//fc1dOhQtW3bVn/84x9Vu3ZtHThwQBs2bND8+fN13333eaSuVatWeWS7pdm6dav69++voqIi3X///Wrfvr0kadu2bXr++ee1YcMGI+rNzs7Wrl27NH78eE+XAi9FQIFX6Nevnzp06OCczsjI0Nq1azVw4EDdfvvt+vrrrxUcHOzBCq8PmZmZio+P16ZNmxQYGOgy78iRI5W2nVOnTik0NLTM/S+uxVNOnDihO++8U35+fvrXv/6luLg4l/nPPfec5s+f76HqALNwiQdeq3fv3po0aZIOHjyot99+22XeN998o7vuuksREREKCgpShw4dtGTJEpc+x48f14QJE9S6dWvVqFFDYWFh6tevn7788ktnn3Xr1qljx46SpFGjRjkvNV18r8KePXvUq1cvhYSEqEGDBpoxY0aZxrBw4UL17t1bkZGRstlsio+P12uvvebWr0mTJho4cKA2btyoTp06KSgoSM2aNdObb77p1nf37t3q3bu3goOD1bBhQ02bNk3FxcVlqmf//v3q2LFjqYEgMjLS+fd169bJx8dH69atc+lT2r0cI0eOVI0aNbR//371799fNWvW1PDhwzVu3DjVqFFDp0+fdtvWvffeq+joaJ0/f16S6z0o+fn58vf3V1ZWlttye/fulY+Pj2bPni2pbO9xebz++uv66aefNGvWLLdwIklRUVGaOHGiS9vcuXN18803y2azKSYmRmlpaW6XgZo0aaKRI0e6re/ie29KXvf33ntPzz33nBo2bKigoCAlJiZq3759Lst98sknOnjwoHOfbdKkiXP+q6++qptvvlkhISGqXbu2OnTowCU8VDoCCrzaAw88IMn1EsDu3bvVpUsXff3113rqqac0c+ZMhYaGavDgwfrwww+d/b7//nt99NFHGjhwoGbNmqXHH39cX331lXr06KHDhw9Lklq2bKkpU6ZIksaMGaO33npLb731lrp37+5cz6+//qq+ffuqTZs2mjlzpuLi4vTkk0/q008/vWL9r732mmJjY/X0009r5syZatSokf77v/9bc+bMceu7b98+3XXXXerTp49mzpyp2rVra+TIkdq9e7ezT15ennr16qUdO3boqaee0vjx4/Xmm2/q5ZdfLtPrGRsbqzVr1ujQoUNl6l9W586dU0pKiiIjI/XCCy8oNTVVQ4cO1alTp/TJJ5+49D19+rSWLl2qu+66S35+fm7rioqKUo8ePfTee++5zVu8eLH8/Px09913Syrbe1weS5YsUXBwsO66664y9c/MzFRaWppiYmI0c+ZMpaam6vXXX1dycrIcDke5t1/i+eef14cffqgJEyYoIyNDmzZt0vDhw53zn3nmGbVt21Z169Z17rMl96PMnz9f//M//6P4+Hi99NJLysrKUtu2bbV58+YK1wOUygKuYwsXLrQkWVu3br1kn1q1alnt2rVzTicmJlqtW7e2zpw542wrLi62br31VqtFixbOtjNnzljnz593WdeBAwcsm81mTZkyxdm2detWS5K1cOFCt2336NHDkmS9+eabzja73W5FR0dbqampVxzf6dOn3dpSUlKsZs2aubTFxsZakqwNGzY4244cOWLZbDbrsccec7aNHz/ekmRt3rzZpV+tWrUsSdaBAwcuW8+CBQssSVZgYKDVq1cva9KkSdY//vEPt9fps88+syRZn332mUv7gQMH3F6rESNGWJKsp556yqVvcXGx1aBBA7fX6b333nMba48ePawePXo4p19//XVLkvXVV1+5LBsfH2/17t3bOV3W97i0uktTu3Ztq02bNpftU+LIkSNWYGCglZyc7FLD7NmzLUnWG2+84WyLjY21RowY4baOi8dd8rq3bNnSstvtzvaXX37Z7fUYMGCAFRsb67bOO+64w7r55pvLNAbganAGBV6vRo0azqd5jh8/rrVr1+qee+7RyZMndfToUR09elTHjh1TSkqKvvvuO/3000+SJJvNJl/f/xxC58+f17Fjx1SjRg3ddNNN+uKLL8q1/fvvv985HRgYqE6dOun777+/4rIX3jdTUFCgo0ePqkePHvr+++9VUFDg0jc+Pl633Xabc7pevXq66aabXLazfPlydenSRZ06dXLpd+Fv15fz+9//XitWrFDPnj21ceNGTZ06VbfddptatGihzz//vEzruJSxY8e6TPv4+Ojuu+/W8uXLVVRU5GxfvHixGjRooG7dul1yXUOGDJG/v78WL17sbNu1a5f27NmjoUOHOtsq6z0uUVhYqJo1a5ap7+rVq3X27FmNHz/eWYMkjR49WmFhYW5njspj1KhRLpfhSvaLsuxz4eHhOnTokLZu3Vrh7QNlQUCB1ysqKnL+p7Fv3z5ZlqVJkyapXr16Lj+TJ0+W9P83exYXF+vFF19UixYtZLPZVLduXdWrV087d+50CweX07BhQ/n4+Li01a5dW7/++usVl/3nP/+ppKQkhYaGKjw8XPXq1dPTTz8tSW41NG7c2G35i7dz8OBBtWjRwq3fTTfdVKaxSFJKSopWrlypEydOaMOGDUpLS9PBgwc1cODACt8o6+/vr4YNG7q1Dx06VL/99pvz/qCioiItX75cd999t9treqG6desqMTHR5TLP4sWL5e/vryFDhjjbKus9LhEWFlbmR9sPHjwoyf21DwwMVLNmzZzzK+LifaF27dqSVKZ97sknn1SNGjXUqVMntWjRQmlpafrnP/9Z4VqASyGgwKsdOnRIBQUFuuGGGyTJeTPohAkTlJOTU+pPSd8//elPSk9PV/fu3fX2229r5cqVysnJ0c0331zmm0ollXqfhCRZlnXZ5fbv36/ExEQdPXpUs2bN0ieffKKcnBw9+uijLmO52u1UVEhIiG677TbNnj1bEydO1K+//uq8r+ZS4aHkptaLXXgm40JdunRRkyZNnEFj6dKl+u2331zOglzKsGHD9O233zo/n+a9995TYmKi6tat6+xTWe9xibi4OH377bc6e/ZsuZe9nPK+nlezL7Rs2VJ79+7Vu+++q27duunvf/+7unXr5gzwQGXhMWN4tbfeekvSf37rl6RmzZpJkgICApSUlHTZZT/44AP16tVLCxYscGk/ceKEy39yl/tN/mosXbpUdrtdS5YscfmN+LPPPqvwOmNjY/Xdd9+5te/du7fC65TkfMT7559/lvT/v7Ff/DRKRc4K3HPPPXr55ZdVWFioxYsXq0mTJurSpcsVlxs8eLAefvhh52Web7/9VhkZGS59yvoel9WgQYOUm5urv//977r33nsv2zc2NlbSf177kv1Sks6ePasDBw647J+1a9cu9QPeDh486LJseVxuvw0NDdXQoUM1dOhQnT17VkOGDNFzzz2njIwMBQUFVWh7wMU4gwKvtXbtWk2dOlVNmzZ13mMRGRmpnj176vXXX3f+Z3qhX375xfl3Pz8/t98433//fec9KiVKPq+jsj8htOS34AtrKCgo0MKFCyu8zv79+2vTpk3asmWLs+2XX37RO++8U6bl16xZU2r78uXLJf3/5YrY2Fj5+flpw4YNLv3mzp1b7pqHDh0qu92uv/71r1qxYoXuueeeMi0XHh6ulJQUvffee3r33XcVGBiowYMHu/Qp63tcVo888ojq16+vxx57TN9++63b/CNHjmjatGmSpKSkJAUGBuqVV15xqWHBggUqKCjQgAEDnG3NmzfXpk2bXM7MLFu2TD/++GOF6pT+s9+Wdhnr2LFjLtOBgYGKj4+XZVlX9WQRcDHOoMArfPrpp/rmm2907tw55efna+3atcrJyVFsbKyWLFni8lvfnDlz1K1bN7Vu3VqjR49Ws2bNlJ+fr9zcXB06dMj5GRgDBw7UlClTNGrUKN1666366quv9M4777j9xtq8eXOFh4dr3rx5qlmzpkJDQ9W5c2c1bdr0qsaUnJyswMBADRo0SA8//LCKioo0f/58RUZGlhquyuKJJ57QW2+9pb59++qPf/yjQkND9Ze//EWxsbHauXPnFZe/44471LRpUw0aNEjNmzfXqVOntHr1ai1dulQdO3bUoEGDJEm1atXS3XffrVdffVU+Pj5q3ry5li1bVqF7VH73u9/phhtu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\n"},"metadata":{}}]},{"cell_type":"code","source":["df['Sex'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QxnIuHFLcLqU","executionInfo":{"status":"ok","timestamp":1703308391184,"user_tz":-330,"elapsed":565,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"6f5773de-5e9f-482b-c9fc-ab70d124ca2f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["male      266\n","female    152\n","Name: Sex, dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df['Sex'].value_counts().plot(kind='bar',title='Sex')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":486},"id":"_iWAOOXy8LmQ","executionInfo":{"status":"ok","timestamp":1703308410419,"user_tz":-330,"elapsed":655,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"7695cdcf-ae8c-4aeb-8348-dcefd4bd6fe9"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[" df['Pclass'].value_counts().plot(kind='bar',title='Passenger Class',alpha=0.90,grid=True)\n"," plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"e8XkBIFYZDea","executionInfo":{"status":"ok","timestamp":1703308417918,"user_tz":-330,"elapsed":866,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"fff1108b-3a7c-410c-de01-e0e35ac697cf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df['Age'].plot(kind='hist',title='Age',alpha=0.90,grid=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"cJAdc7BsewLm","executionInfo":{"status":"ok","timestamp":1703308486781,"user_tz":-330,"elapsed":595,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"f69f27d6-7f17-465c-ee2c-240e64dee049"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["rel_1=pd.crosstab(df['Pclass'],df['Survived'])\n","print(rel_1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ovOHHY_rVob","executionInfo":{"status":"ok","timestamp":1703308494090,"user_tz":-330,"elapsed":583,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"b43505de-9388-499e-ff17-38ad0ee2941c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Survived    0   1\n","Pclass           \n","1          57  50\n","2          63  30\n","3         146  72\n"]}]},{"cell_type":"code","source":["rel_1=pd.crosstab(df['Pclass'],df['Survived'])\n","rel_1_normalize = rel_1.div(rel_1.sum(1).astype(float),axis=0)\n","rel_1_normalize.plot(kind='bar',title='Survival Rate by Passenger Classes',stacked=True,grid=True)\n","plt.xlabel('Passenger Class')\n","plt.ylabel('Survival Rate')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"MNBQobPnh54P","executionInfo":{"status":"ok","timestamp":1703308497488,"user_tz":-330,"elapsed":654,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"0a8dc7da-84b0-4c74-fe71-46939015edb4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sexes=sorted(df['Sex'].unique())\n","genders_mapping=dict(zip(sexes,range(0, len(sexes)+1)))\n","df['Sex_val']=df['Sex'].map(genders_mapping).astype(int)\n","df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":641},"id":"xa2EmnV7tZMc","executionInfo":{"status":"ok","timestamp":1703308509430,"user_tz":-330,"elapsed":914,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"e876847a-3614-4d2e-879e-453ffbbd53b3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0          892         0       3   \n","1          893         1       3   \n","2          894         0       2   \n","3          895         0       3   \n","4          896         1       3   \n","5          897         0       3   \n","6          898         1       3   \n","7          899         0       2   \n","8          900         1       3   \n","9          901         0       3   \n","\n","                                           Name     Sex   Age  SibSp  Parch  \\\n","0                              Kelly, Mr. James    male  34.5      0      0   \n","1              Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n","2                     Myles, Mr. Thomas Francis    male  62.0      0      0   \n","3                              Wirz, Mr. Albert    male  27.0      0      0   \n","4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n","5                    Svensson, Mr. Johan Cervin    male  14.0      0      0   \n","6                          Connolly, Miss. Kate  female  30.0      0      0   \n","7                  Caldwell, Mr. Albert Francis    male  26.0      1      1   \n","8     Abrahim, Mrs. Joseph (Sophie Halaut Easu)  female  18.0      0      0   \n","9                       Davies, Mr. John Samuel    male  21.0      2      0   \n","\n","      Ticket     Fare Cabin Embarked  Sex_val  \n","0     330911   7.8292   NaN        Q        1  \n","1     363272   7.0000   NaN        S        0  \n","2     240276   9.6875   NaN        Q        1  \n","3     315154   8.6625   NaN        S        1  \n","4    3101298  12.2875   NaN        S        0  \n","5       7538   9.2250   NaN        S        1  \n","6     330972   7.6292   NaN        Q        0  \n","7     248738  29.0000   NaN        S        1  \n","8       2657   7.2292   NaN        C        0  \n","9  A/4 48871  24.1500   NaN        S        1  "],"text/html":["\n","  <div id=\"df-c4d8b3ad-c051-4d8b-8aa5-d8518411a8d2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Sex_val</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>897</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Svensson, Mr. Johan Cervin</td>\n","      <td>male</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7538</td>\n","      <td>9.2250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>898</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Connolly, Miss. Kate</td>\n","      <td>female</td>\n","      <td>30.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330972</td>\n","      <td>7.6292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>899</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Caldwell, Mr. Albert Francis</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>248738</td>\n","      <td>29.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>900</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Abrahim, Mrs. Joseph (Sophie Halaut Easu)</td>\n","      <td>female</td>\n","      <td>18.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2657</td>\n","      <td>7.2292</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>901</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Davies, Mr. John Samuel</td>\n","      <td>male</td>\n","      <td>21.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>A/4 48871</td>\n","      <td>24.1500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4d8b3ad-c051-4d8b-8aa5-d8518411a8d2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c4d8b3ad-c051-4d8b-8aa5-d8518411a8d2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c4d8b3ad-c051-4d8b-8aa5-d8518411a8d2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-06675dbb-99cd-4e62-995c-af53254a69ac\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06675dbb-99cd-4e62-995c-af53254a69ac')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-06675dbb-99cd-4e62-995c-af53254a69ac button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["rel_2=pd.crosstab(df['Sex'],df['Survived'])\n","rel_2_normalize=rel_2.div(rel_2.sum(1).astype(float),axis=0)\n","rel_2_normalize.plot(kind='bar',title='Surival Rate by Sex',stacked=True,grid=True)\n","plt.xlabel('Sex')\n","plt.ylabel('Survival Rate')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":506},"id":"Qhc7e8NB6ZeM","executionInfo":{"status":"ok","timestamp":1703308519768,"user_tz":-330,"elapsed":640,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"2143ad0b-f6dc-4b82-e727-424b53f2aeb4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["passenger_classes=sorted(df['Pclass'].unique())\n","passenger_classes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g8r2X_l3BlUC","executionInfo":{"status":"ok","timestamp":1703308527804,"user_tz":-330,"elapsed":573,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"89301ce9-8c6e-4a81-9031-de8e85c4b27f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3]"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df[df['Embarked'].isnull()]"],"metadata":{"id":"9C5FrrwBCPbt","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1703308531087,"user_tz":-330,"elapsed":20,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"533da141-1289-44c9-a2b9-a8c5f5d4f521"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [PassengerId, Survived, Pclass, Name, Sex, Age, SibSp, Parch, Ticket, Fare, Cabin, Embarked, Sex_val]\n","Index: []"],"text/html":["\n","  <div id=\"df-e919a1ab-1225-4977-9cf5-a65de9b82768\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Sex_val</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e919a1ab-1225-4977-9cf5-a65de9b82768')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e919a1ab-1225-4977-9cf5-a65de9b82768 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e919a1ab-1225-4977-9cf5-a65de9b82768');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df['Embarked_Value']=df['Embarked']\n","df.head(10)"],"metadata":{"id":"QwRF3tZAWXTw","executionInfo":{"status":"ok","timestamp":1703308537960,"user_tz":-330,"elapsed":793,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"colab":{"base_uri":"https://localhost:8080/","height":800},"outputId":"9cfd2b82-bb4b-4213-f851-17828de74aee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0          892         0       3   \n","1          893         1       3   \n","2          894         0       2   \n","3          895         0       3   \n","4          896         1       3   \n","5          897         0       3   \n","6          898         1       3   \n","7          899         0       2   \n","8          900         1       3   \n","9          901         0       3   \n","\n","                                           Name     Sex   Age  SibSp  Parch  \\\n","0                              Kelly, Mr. James    male  34.5      0      0   \n","1              Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n","2                     Myles, Mr. Thomas Francis    male  62.0      0      0   \n","3                              Wirz, Mr. Albert    male  27.0      0      0   \n","4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n","5                    Svensson, Mr. Johan Cervin    male  14.0      0      0   \n","6                          Connolly, Miss. Kate  female  30.0      0      0   \n","7                  Caldwell, Mr. Albert Francis    male  26.0      1      1   \n","8     Abrahim, Mrs. Joseph (Sophie Halaut Easu)  female  18.0      0      0   \n","9                       Davies, Mr. John Samuel    male  21.0      2      0   \n","\n","      Ticket     Fare Cabin Embarked  Sex_val Embarked_Value  \n","0     330911   7.8292   NaN        Q        1              Q  \n","1     363272   7.0000   NaN        S        0              S  \n","2     240276   9.6875   NaN        Q        1              Q  \n","3     315154   8.6625   NaN        S        1              S  \n","4    3101298  12.2875   NaN        S        0              S  \n","5       7538   9.2250   NaN        S        1              S  \n","6     330972   7.6292   NaN        Q        0              Q  \n","7     248738  29.0000   NaN        S        1              S  \n","8       2657   7.2292   NaN        C        0              C  \n","9  A/4 48871  24.1500   NaN        S        1              S  "],"text/html":["\n","  <div id=\"df-d0a70ae2-2432-4dbd-af58-ea53bf66a483\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Sex_val</th>\n","      <th>Embarked_Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","      <td>1</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","      <td>1</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>897</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Svensson, Mr. Johan Cervin</td>\n","      <td>male</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7538</td>\n","      <td>9.2250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>898</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Connolly, Miss. Kate</td>\n","      <td>female</td>\n","      <td>30.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330972</td>\n","      <td>7.6292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","      <td>0</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>899</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Caldwell, Mr. Albert Francis</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>248738</td>\n","      <td>29.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>900</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Abrahim, Mrs. Joseph (Sophie Halaut Easu)</td>\n","      <td>female</td>\n","      <td>18.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2657</td>\n","      <td>7.2292</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>901</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Davies, Mr. John Samuel</td>\n","      <td>male</td>\n","      <td>21.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>A/4 48871</td>\n","      <td>24.1500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0a70ae2-2432-4dbd-af58-ea53bf66a483')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d0a70ae2-2432-4dbd-af58-ea53bf66a483 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d0a70ae2-2432-4dbd-af58-ea53bf66a483');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9efb7b9c-703a-4610-923a-1f7b1b9ba234\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9efb7b9c-703a-4610-923a-1f7b1b9ba234')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9efb7b9c-703a-4610-923a-1f7b1b9ba234 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df['Embarked_Value'].replace(['C','Q','S'],[1,2,3],inplace=True)"],"metadata":{"id":"YiHRgOnob_oK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["embarked_locs = sorted(df['Embarked_Value'].unique())\n","embarked_locs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MrXAHr0RezmJ","executionInfo":{"status":"ok","timestamp":1703308548702,"user_tz":-330,"elapsed":12,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"f40a10b0-5d8e-4de0-8432-4f9b7d152a77"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3]"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df['Embarked_Value'].plot(kind='hist',bins=3,range=(1,3),grid='True')\n","plt.title('Port of Embarkation Histogram')\n","plt.xlabel('Port of Embarkation')\n","plt.ylabel('count')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"Ap3XqvfbfPwX","executionInfo":{"status":"ok","timestamp":1703308552076,"user_tz":-330,"elapsed":745,"user":{"displayName":"Harini S","userId":"16382042964335019973"}},"outputId":"94109ad2-8432-4d81-af92-873f14896a63"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAjsAAAHHCAYAAABZbpmkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABF+ElEQVR4nO3de3xNV/7/8fdJJEcuIm5JhDSuTd3NuKRpiyBCqNJqlWqLurRGpiVoq18lob9q1a+UUdqOimmpXsZl2hrELR0GLa2i1GBc2hJaREQqjmT9/ug35+dIEHEix+7r+XjkwVl77bXXZ++z5W2fvRObMcYIAADAorzKegIAAAClibADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbAD3CKys7M1ePBghYWFyWazacSIEWU9JaWmpspms2nr1q03ZXu1atXSvffeW+rbGTBggGrVqlXq23GHW2muQFkh7OB3oeCbcsFX+fLldfvttysxMVHHjx9367ZefvllLV261K1jFoybmpqqYcOG6b333tNjjz12xb61atVyqffSry5durh9breio0ePKjk5Wdu3by/rqTgdOnRINptNU6dOLXJ5cnKybDabfvnllxvazu7du5WcnKxDhw7d0DjAraJcWU8AuJkmTpyo2rVr6/z589qwYYNmz56t5cuXa9euXfL393fLNl5++WU9+OCD6tmzp1vGK7B27VrdeeedmjBhQrH6N2/eXKNGjSrUHh4e7tZ53aqOHj2qlJQU1apVS82bN3dZ9s477yg/P79sJnadSjLX3bt3KyUlRbGxsVwVwu8CYQe/KwkJCWrZsqUkafDgwapSpYpef/11LVu2TH379i3xuMYYnT9/Xn5+fu6aaiEnTpxQw4YNi92/Ro0aevTRR0ttPjdTTk6O28Jocfj4+Ny0bd2oW2muBc6fPy9fX195efHhAm4O3mn4XevQoYMk6eDBg5KkixcvatKkSapbt67sdrtq1aqlF154Qbm5uS7rFdw7snLlSrVs2VJ+fn566623ZLPZdO7cOc2fP9/5sdGAAQOuOocTJ05o0KBBCg0NVfny5dWsWTPNnz/fuXz9+vWy2Ww6ePCgPv/8c+e47vgIYsCAAQoMDNSRI0d07733KjAwUDVq1NCsWbMkSTt37lSHDh0UEBCgyMhILVy4sMhxcnJy9OSTT6pKlSoKCgrS448/rtOnT7v0WbZsmbp166bw8HDZ7XbVrVtXkyZNUl5enku/2NhYNW7cWNu2bVPbtm3l7++vF1544Yo1zJ8/X+XKldOYMWMkSadOndLo0aPVpEkTBQYGKigoSAkJCfr222+d66xfv16tWrWSJA0cONC5T1NTU5375fIrHufOndOoUaMUEREhu92uqKgoTZ06VcYYl342m02JiYlaunSpGjduLLvdrkaNGmnFihVXrOFGFDXXRYsWqUWLFqpQoYKCgoLUpEkTvfHGG5J++0j3oYcekiS1b9/eWfv69eud67/55ptq1KiR7Ha7wsPDNXz4cGVmZhba9qxZs1SnTh35+fmpdevW+te//qXY2FjFxsY6+xS8fxctWqRx48apRo0a8vf3V1ZWVrGO1aVjfPTRR0pJSVGNGjVUoUIFPfjggzpz5oxyc3M1YsQIhYSEKDAwUAMHDix0zuL3jSs7+F07cOCAJKlKlSqSfrvaM3/+fD344IMaNWqUtmzZosmTJ2vPnj1asmSJy7p79+5V37599eSTT2rIkCGKiorSe++9p8GDB6t169YaOnSoJKlu3bpX3P6vv/6q2NhY7d+/X4mJiapdu7Y+/vhjDRgwQJmZmXrmmWfUoEEDvffeexo5cqRq1qzp/GiqWrVqV63N4XAUeW9HQECAyxWovLw8JSQkqG3btpoyZYoWLFigxMREBQQE6H/+53/Ur18/PfDAA5ozZ44ef/xxxcTEqHbt2i5jJiYmKjg4WMnJydq7d69mz56tw4cPO79JSb99kw0MDFRSUpICAwO1du1ajR8/XllZWXrttddcxjt58qQSEhLUp08fPfroowoNDS2yxrfffltPPfWUXnjhBb300kuSpP/+979aunSpHnroIdWuXVvHjx/XW2+9pXbt2mn37t0KDw9XgwYNNHHiRI0fP15Dhw5VmzZtJEl33XVXkdsxxui+++7TunXrNGjQIDVv3lwrV67UmDFj9NNPP2natGku/Tds2KDFixfrT3/6kypUqKAZM2aoV69eOnLkiPO9djU5OTlFHrucnJxrrpuWlqa+ffuqY8eOevXVVyVJe/bs0caNG/XMM8+obdu2evrppzVjxgy98MILatCggSQ5/0xOTlZKSori4uI0bNgw5/H86quvtHHjRueVpNmzZysxMVFt2rTRyJEj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du2qvLw8/eUvf3FpnzZtmmw2m7NOT3DpvpAkLy8vZ/goeBz7SrXHxcXJ19dXM2bMcNmHc+fO1ZkzZ5znQMuWLVWlShW98847LvfFLFiwoNgf1UnFP1bAjeLKDvC/mjVrpv79++vtt992fuzy5Zdfav78+erZs6fL/2CvpkWLFlq9erVef/11hYeHq3bt2oqOji6y79ChQ/XWW29pwIAB2rZtm2rVqqVPPvlEGzdu1PTp0wvdI3I9fvrpJ73//vuF2gMDA93+050vXLigjh07qnfv3tq7d6/efPNN3XPPPbrvvvsk/fZId6VKldS/f389/fTTstlseu+9927oY4Z69epp1apVio2NVefOnbV27VoFBQXp3nvv1cSJEzVw4EDddddd2rlzpxYsWOBypUL67UcCBAcHa86cOapQoYICAgIUHR1d5L0l3bt3V/v27fU///M/OnTokJo1a6ZVq1Zp2bJlGjFixFV/vMDNNnjwYJ06dUodOnRQzZo1dfjwYc2cOVPNmzd3XrFs3ry5vL299eqrr+rMmTOy2+3q0KGDQkJCNHbsWKWkpKhLly667777nMezVatWzh9S6evrq+TkZP35z39Whw4d1Lt3bx06dEipqamqW7dusa+aFfdYATesrB4DA26mgkekv/rqq6v2czgcJiUlxdSuXdv4+PiYiIgIM3bsWJdHo425+mPg33//vWnbtq3x8/Mzkq75GPrx48fNwIEDTdWqVY2vr69p0qRJkY9Du+vR80sfye3fv78JCAgotH67du1Mo0aNrjmHgv2anp5uhg4daipVqmQCAwNNv379zMmTJ13W3bhxo7nzzjuNn5+fCQ8PN88++6xZuXJloUegr7TtK+2DLVu2mAoVKpi2bduanJwcc/78eTNq1ChTvXp14+fnZ+6++26zadMm065dO5dHoo0xZtmyZaZhw4amXLlyLo+hX/44tzHGnD171owcOdKEh4cbHx8fU79+ffPaa6+Z/Px8l36SzPDhw4uc+7XeCwWPnr/22mtFLp8wYcI1Hz3/5JNPTHx8vAkJCTG+vr7mtttuM08++aQ5duyYy1jvvPOOqVOnjvH29i50DP7yl7+YO+64w/j4+JjQ0FAzbNgwc/r06ULzmTFjhomMjDR2u920bt3abNy40bRo0cJ06dLF2afgsfGPP/640PrFPVZXGuNK53VR+wm/bzZjuIMLAHDj8vPzVa1aNT3wwAN65513yno6gBP37AAArtv58+cLfQz5t7/9TadOnXL5dRGAJ+DKDgDguq1fv14jR47UQw89pCpVqujrr7/W3Llz1aBBA23btu2KPycJKAvcoAwAuG61atVSRESEZsyYoVOnTqly5cp6/PHH9corrxB04HG4sgMAACyNe3YAAIClEXYAAIClcc+Ofntc8ujRo6pQocJ1/Qh5AABQdowxOnv2rMLDw4v8XYcFCDuSjh49Wui35gIAgFvDDz/8oJo1a15xOWFHcv5I/h9++EFBQUFuG9fhcGjVqlWKj4+Xj4+P28b1JFavkfpufVavkfpufVavsTTry8rKUkRExDV/tQ5hR///tx8HBQW5Pez4+/srKCjIkm9gyfo1Ut+tz+o1Ut+tz+o13oz6rnULCjcoAwAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASytX1hMAAHiOWs9/XtZTcGH3NprSWmqcvFK5ebaynk6psHqNBfWVJa7sAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyPsAAAASyvTsDN58mS1atVKFSpUUEhIiHr27Km9e/e69ImNjZXNZnP5euqpp1z6HDlyRN26dZO/v79CQkI0ZswYXbx48WaWAgAAPFS5stx4enq6hg8frlatWunixYt64YUXFB8fr927dysgIMDZb8iQIZo4caLztb+/v/PveXl56tatm8LCwvTvf/9bx44d0+OPPy4fHx+9/PLLN7UeAADgeco07KxYscLldWpqqkJCQrRt2za1bdvW2e7v76+wsLAix1i1apV2796t1atXKzQ0VM2bN9ekSZP03HPPKTk5Wb6+vqVaAwAA8GxlGnYud+bMGUlS5cqVXdoXLFig999/X2FhYerevbtefPFF59WdTZs2qUmTJgoNDXX279y5s4YNG6bvvvtOf/jDHwptJzc3V7m5uc7XWVlZkiSHwyGHw+G2egrGcueYnsbqNVLfrc/qNbq7Pru3ccs47mL3Mi5/WpHVayyoqzTOweKOaTPGeMTezc/P13333afMzExt2LDB2f72228rMjJS4eHh2rFjh5577jm1bt1aixcvliQNHTpUhw8f1sqVK53r5OTkKCAgQMuXL1dCQkKhbSUnJyslJaVQ+8KFC10+IgMAAJ4rJydHjzzyiM6cOaOgoKAr9vOYKzvDhw/Xrl27XIKO9FuYKdCkSRNVr15dHTt21IEDB1S3bt0SbWvs2LFKSkpyvs7KylJERITi4+OvurOul8PhUFpamjp16iQfHx+3jetJrF4j9d36rF6ju+trnLzy2p1uIruX0aSW+Xpxq5dy821lPZ1SYfUaC+orjXOw4JOZa/GIsJOYmKjPPvtMX3zxhWrWrHnVvtHR0ZKk/fv3q27dugoLC9OXX37p0uf48eOSdMX7fOx2u+x2e6F2Hx+fUvnHsLTG9SRWr5H6bn1Wr9Fd9eXmeeY329x8m8fOzV2sXmNpnIPFHa9MHz03xigxMVFLlizR2rVrVbt27Wuus337dklS9erVJUkxMTHauXOnTpw44eyTlpamoKAgNWzYsFTmDQAAbh1lemVn+PDhWrhwoZYtW6YKFSooIyNDklSxYkX5+fnpwIEDWrhwobp27aoqVapox44dGjlypNq2baumTZtKkuLj49WwYUM99thjmjJlijIyMjRu3DgNHz68yKs3AADg96VMr+zMnj1bZ86cUWxsrKpXr+78+vDDDyVJvr6+Wr16teLj43XHHXdo1KhR6tWrlz799FPnGN7e3vrss8/k7e2tmJgYPfroo3r88cddfi4PAAD4/SrTKzvXehAsIiJC6enp1xwnMjJSy5cvd9e0AACAhfC7sQAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKWVadiZPHmyWrVqpQoVKigkJEQ9e/bU3r17XfqcP39ew4cPV5UqVRQYGKhevXrp+PHjLn2OHDmibt26yd/fXyEhIRozZowuXrx4M0sBAAAeqkzDTnp6uoYPH67NmzcrLS1NDodD8fHxOnfunLPPyJEj9emnn+rjjz9Wenq6jh49qgceeMC5PC8vT926ddOFCxf073//W/Pnz1dqaqrGjx9fFiUBAAAPU64sN75ixQqX16mpqQoJCdG2bdvUtm1bnTlzRnPnztXChQvVoUMHSdK8efPUoEEDbd68WXfeeadWrVql3bt3a/Xq1QoNDVXz5s01adIkPffcc0pOTpavr29ZlAYAADxEmYady505c0aSVLlyZUnStm3b5HA4FBcX5+xzxx136LbbbtOmTZt05513atOmTWrSpIlCQ0OdfTp37qxhw4bpu+++0x/+8IdC28nNzVVubq7zdVZWliTJ4XDI4XC4rZ6Csdw5pqexeo3Ud+uzeo3urs/ubdwyjrvYvYzLn1Zk9RoL6iqNc7C4Y3pM2MnPz9eIESN09913q3HjxpKkjIwM+fr6Kjg42KVvaGioMjIynH0uDToFywuWFWXy5MlKSUkp1L5q1Sr5+/vfaCmFpKWluX1MT2P1Gqnv1mf1Gt1V35TWbhnG7Sa1zC/rKZQ6q9dYGudgTk5Osfp5TNgZPny4du3apQ0bNpT6tsaOHaukpCTn66ysLEVERCg+Pl5BQUFu247D4VBaWpo6deokHx8ft43rSaxeI/Xd+qxeo7vra5y80g2zch+7l9Gklvl6cauXcvNtZT2dUmH1GgvqK41zsOCTmWvxiLCTmJiozz77TF988YVq1qzpbA8LC9OFCxeUmZnpcnXn+PHjCgsLc/b58ssvXcYreFqroM/l7Ha77HZ7oXYfH59S+cewtMb1JFavkfpufVav0V315eZ55jfb3Hybx87NXaxeY2mcg8Udr0yfxjLGKDExUUuWLNHatWtVu3Ztl+UtWrSQj4+P1qxZ42zbu3evjhw5opiYGElSTEyMdu7cqRMnTjj7pKWlKSgoSA0bNrw5hQAAAI9Vpld2hg8froULF2rZsmWqUKGC8x6bihUrys/PTxUrVtSgQYOUlJSkypUrKygoSH/+858VExOjO++8U5IUHx+vhg0b6rHHHtOUKVOUkZGhcePGafjw4UVevQEAAL8vZRp2Zs+eLUmKjY11aZ83b54GDBggSZo2bZq8vLzUq1cv5ebmqnPnznrzzTedfb29vfXZZ59p2LBhiomJUUBAgPr376+JEyferDIAAIAHK9OwY8y1H7MrX768Zs2apVmzZl2xT2RkpJYvX+7OqQEAAIvgd2MBAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLI+wAAABLK1HY6dChgzIzMwu1Z2VlqUOHDjc6JwAAALcpUdhZv369Lly4UKj9/Pnz+te//nXDkwIAAHCX6wo7O3bs0I4dOyRJu3fvdr7esWOHvvnmG82dO1c1atQo9nhffPGFunfvrvDwcNlsNi1dutRl+YABA2Sz2Vy+unTp4tLn1KlT6tevn4KCghQcHKxBgwYpOzv7esoCAAAWVu56Ojdv3twZOor6uMrPz08zZ84s9njnzp1Ts2bN9MQTT+iBBx4osk+XLl00b94852u73e6yvF+/fjp27JjS0tLkcDg0cOBADR06VAsXLiz2PAAAgHVdV9g5ePCgjDGqU6eOvvzyS1WrVs25zNfXVyEhIfL29i72eAkJCUpISLhqH7vdrrCwsCKX7dmzRytWrNBXX32lli1bSpJmzpyprl27aurUqQoPDy/2XAAAgDVdV9iJjIyUJOXn55fKZIqyfv16hYSEqFKlSurQoYNeeuklValSRZK0adMmBQcHO4OOJMXFxcnLy0tbtmzR/fffX+SYubm5ys3Ndb7OysqSJDkcDjkcDrfNvWAsd47paaxeI/Xd+qxeo7vrs3sbt4zjLnYv4/KnFVm9xoK6SuMcLO6YNmNMifbuvn37tG7dOp04caJQ+Bk/fvx1j2ez2bRkyRL17NnT2bZo0SL5+/urdu3aOnDggF544QUFBgZq06ZN8vb21ssvv6z58+dr7969LmOFhIQoJSVFw4YNK3JbycnJSklJKdS+cOFC+fv7X/fcAQDAzZeTk6NHHnlEZ86cUVBQ0BX7XdeVnQLvvPOOhg0bpqpVqyosLEw2m825zGazlSjsFKVPnz7Ovzdp0kRNmzZV3bp1tX79enXs2LHE444dO1ZJSUnO11lZWYqIiFB8fPxVd9b1cjgcSktLU6dOneTj4+O2cT2J1Wukvluf1Wt0d32Nk1e6YVbuY/cymtQyXy9u9VJuvu3aK9yCrF5jQX2lcQ4WfDJzLSUKOy+99JL+z//5P3ruuedKsnqJ1alTR1WrVtX+/fvVsWNHhYWF6cSJEy59Ll68qFOnTl3xPh/pt/uALr/RWZJ8fHxK5R/D0hrXk1i9Ruq79Vm9RnfVl5vnmd9sc/NtHjs3d7F6jaVxDhZ3vBL9nJ3Tp0/roYceKsmqN+THH3/UyZMnVb16dUlSTEyMMjMztW3bNmeftWvXKj8/X9HR0Td9fgAAwPOUKOw89NBDWrVq1Q1vPDs7W9u3b9f27dsl/fa01/bt23XkyBFlZ2drzJgx2rx5sw4dOqQ1a9aoR48eqlevnjp37ixJatCggbp06aIhQ4boyy+/1MaNG5WYmKg+ffrwJBYAAJBUwo+x6tWrpxdffFGbN29WkyZNCl1Gevrpp4s1ztatW9W+fXvn64L7aPr376/Zs2drx44dmj9/vjIzMxUeHq74+HhNmjTJ5SOoBQsWKDExUR07dpSXl5d69eqlGTNmlKQsAABgQSUKO2+//bYCAwOVnp6u9PR0l2U2m63YYSc2NlZXexhs5cpr3yhXuXJlfoAgAAC4ohKFnYMHD7p7HgAAAKWiRPfsAAAA3CpKdGXniSeeuOryd999t0STAQAAcLcShZ3Tp0+7vHY4HNq1a5cyMzOL/AWhAAAAZaVEYWfJkiWF2vLz8zVs2DDVrVv3hicFAADgLm67Z8fLy0tJSUmaNm2au4YEAAC4YW69QfnAgQO6ePGiO4cEAAC4ISX6GOvSX6IpScYYHTt2TJ9//rn69+/vlokBAAC4Q4nCzjfffOPy2svLS9WqVdP//b//95pPagEAANxMJQo769atc/c8AAAASkWJwk6Bn3/+WXv37pUkRUVFqVq1am6ZFAAAgLuU6Ablc+fO6YknnlD16tXVtm1btW3bVuHh4Ro0aJBycnLcPUcAAIASK1HYSUpKUnp6uj799FNlZmYqMzNTy5YtU3p6ukaNGuXuOQIAAJRYiT7G+vvf/65PPvlEsbGxzrauXbvKz89PvXv31uzZs901PwAAgBtSois7OTk5Cg0NLdQeEhLCx1gAAMCjlCjsxMTEaMKECTp//ryz7ddff1VKSopiYmLcNjkAAIAbVaKPsaZPn64uXbqoZs2aatasmSTp22+/ld1u16pVq9w6QQAAgBtRorDTpEkT7du3TwsWLND3338vSerbt6/69esnPz8/t04QAADgRpQo7EyePFmhoaEaMmSIS/u7776rn3/+Wc8995xbJgcAAHCjSnTPzltvvaU77rijUHujRo00Z86cG54UAACAu5Qo7GRkZKh69eqF2qtVq6Zjx47d8KQAAADcpURhJyIiQhs3bizUvnHjRoWHh9/wpAAAANylRPfsDBkyRCNGjJDD4VCHDh0kSWvWrNGzzz7LT1AGAAAepURhZ8yYMTp58qT+9Kc/6cKFC5Kk8uXL67nnntPYsWPdOkEAAIAbUaKwY7PZ9Oqrr+rFF1/Unj175Ofnp/r168tut7t7fgAAADekRGGnQGBgoFq1auWuuQAAALhdiW5QBgAAuFUQdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKURdgAAgKWVadj54osv1L17d4WHh8tms2np0qUuy40xGj9+vKpXry4/Pz/FxcVp3759Ln1OnTqlfv36KSgoSMHBwRo0aJCys7NvYhUAAMCTlWnYOXfunJo1a6ZZs2YVuXzKlCmaMWOG5syZoy1btiggIECdO3fW+fPnnX369eun7777Tmlpafrss8/0xRdfaOjQoTerBAAA4OHKleXGExISlJCQUOQy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PXooNDRUgYGBatWqlVavXu3sHxsbq8OHD2vkyJHO/XzpMbnU7NmzVbduXfn6+ioqKkrvvfeey3Kbzaa//vWvuv/+++Xv76/69es73wPA7w1hB/gd8PPzc34zHzBggLZu3ap//OMf2rRpk4wx6tq1q8uViZycHL366qv661//qu+++04zZsxQ79691aVLFx07dkzHjh3TXXfdVeS2nn32Wf3973/X/Pnz9fXXX6tevXrq3LmzTp06pYiICB07dkxBQUGaPn26jh07pocffviGapswYYLGjRunr7/+WuXKldMjjzyiZ599Vm+88Yb+9a9/af/+/Ro/frzLOmvWrNGePXu0fv16ffDBB1q8eLFSUlKcy8+dO6ekpCRt3bpVa9askZeXl+6//37l5+e7jPP888/rmWee0Z49e9S5c2eXZT/88IPatGmjxo0b65NPPpHdbld2dra6du2qNWvW6JtvvlGXLl3UvXt3HTlyRJK0ePFi1axZUxMnTnTu56IsWbJEzzzzjEaNGqVdu3bpySef1MCBA7Vu3TqXfikpKerdu7d27Nihrl27ql+/fjp16lSJ9zVwy3LrrxUFUOb69+9vevToYYz57bcJp6WlGbvdbkaPHm3+85//GElm48aNzv6//PKL8fPzMx999JExxph58+YZSWb79u1XHPdKsrOzjY+Pj1mwYIGz7cKFCyY8PNxMmTLF2VaxYkWX3wRdlHbt2hkfHx8TEBDg8vX+++8bY4w5ePCgkWT++te/Otf54IMPjCSzZs0aZ9vkyZNNVFSUSx2VK1c2586dc7bNnj3bBAYGmry8vCLn8vPPPxtJZufOnS7bnj59uku/efPmmYoVK5rvv//eREREmKefftrk5+dftc5GjRqZmTNnOl9HRkaaadOmFTlugbvuussMGTLEpc9DDz1kunbt6nwtyYwbN875Ojs720gy//znP686H8CKuLIDWNBnn32mwMBAlS9fXgkJCXr44YeVnJysPXv2qFy5coqOjnb2rVKliqKiorRnzx5nm6+vr5o2bXrd2z1w4IAcDofuvvtuZ5uPj49at27tMn5x9evXT9u3b3f5uu+++1z6XDrP0NBQSVKTJk1c2k6cOOGyTrNmzVzu/YmJiVF2drZ++OEHSdK+ffvUt29f1alTR0FBQapVq5YkOa/AFGjZsmWhOf/6669q06aNHnjgAb3xxhsu9ztlZ2dr9OjRatCggYKDgxUYGKg9e/YUGvda9uzZ47KPJenuu+8utI8v3TcBAQEKCgoqtC+A3wNuUAYsqH379po9e7Z8fX0VHh6ucuWu71T38/Nz+03JJVGxYkXVq1fvqn18fHycfy+Y8+Vtl3/8dC3du3dXZGSk3nnnHYWHhys/P1+NGzd2ua9H+i1AXM5utysuLk6fffaZxowZoxo1ajiXjR49WmlpaZo6darq1asnPz8/Pfjgg4XGdZdL94NUsn0BWAFXdgALCggIUL169XTbbbe5BJ0GDRro4sWL2rJli7Pt5MmT2rt3rxo2bHjVMX19fZWXl3fVPgU3zG7cuNHZ5nA49NVXX11z/Jvp22+/1a+//up8vXnzZgUGBioiIsK5P8aNG6eOHTuqQYMGOn36dLHH9vLy0nvvvacWLVqoffv2Onr0qHPZxo0bNWDAAN1///1q0qSJwsLCdOjQIZf1i7OfGzRo4LKPC8b2pH0MeBLCDvA7Ur9+ffXo0UNDhgzRhg0b9O233+rRRx9VjRo11KNHj6uuW6tWLe3YsUN79+7VL7/8UuSj1gEBARo2bJjGjBmjFStWaPfu3RoyZIhycnI0aNCg655vTk6OMjIyXL6uJ3hcyYULFzRo0CDt3r1by5cv14QJE5SYmCgvLy9VqlRJVapU0dtvv639+/dr7dq1SkpKuq7xvb29tWDBAjVr1kwdOnRQRkaGpN/2/+LFi7V9+3Z9++23euSRRwpdaalVq5a++OIL/fTTT/rll1+KHH/MmDFKTU3V7NmztW/fPr3++utavHixRo8eXbIdAlgcYQf4nZk3b55atGihe++9VzExMTLGaPny5YU+8rjckCFDFBUVpZYtW6patWqFriwUeOWVV9SrVy899thj+uMf/6j9+/dr5cqVqlSp0nXP9Z133lH16tVdvvr27Xvd41yuY8eOql+/vtq2bauHH35Y9913n5KTkyX9dmVm0aJF2rZtmxo3bqyRI0fqtddeu+5tlCtXTh988IEaNWqkDh066MSJE3r99ddVqVIl3XXXXerevbs6d+6sP/7xjy7rTZw4UYcOHVLdunVVrVq1Isfu2bOn3njjDU2dOlWNGjXSW2+9pXnz5ik2Nva65wn8HtiMMaasJwEAAFBauLIDAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAsjbADAAAs7f8B72Z48Kfw95IAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"markdown","source":["\n","# New Section"],"metadata":{"id":"I53LhkQAtU9j"}}]}